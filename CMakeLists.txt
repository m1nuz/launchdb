cmake_minimum_required(VERSION 3.2 FATAL_ERROR)

project(launchdb)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})

# Set variable for config
set(INSTALL_DIR /usr/bin)
set(LAUNCHDB_VERSION_MAJOR 0)
set(LAUNCHDB_VERSION_MINOR 3)
set(LAUNCHDB_VERSION_PATCH 0)
set(LAUNCHDB_VERSION_META "dev")

# System info
if (UNIX)
    find_program(LSB_RELEASE lsb_release)
    execute_process(COMMAND ${LSB_RELEASE} -is
        OUTPUT_VARIABLE LSB_RELEASE_ID_SHORT
        OUTPUT_STRIP_TRAILING_WHITESPACE
        )
    execute_process(COMMAND ${LSB_RELEASE} -rs
        OUTPUT_VARIABLE LSB_RELEASE_SHORT
        OUTPUT_STRIP_TRAILING_WHITESPACE
        )
    execute_process(COMMAND ${LSB_RELEASE} -cs
        OUTPUT_VARIABLE LSB_CODENAME_SHORT
        OUTPUT_STRIP_TRAILING_WHITESPACE
        )
endif()

# Shared headers
set(SHARED_INCLUDE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/include)
file(GLOB SHARED_HEADERS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} include/*.hpp)

configure_file("${SHARED_INCLUDE_PATH}/launchdb/config.h.in" "${SHARED_INCLUDE_PATH}/launchdb/config.h")

add_subdirectory(src/sqlite)
add_subdirectory(src/postgres)
add_subdirectory(src/migrate)
add_subdirectory(src/create)
add_subdirectory(src/grab)

# DEB package
if (UNIX)
set(CPACK_GENERATOR "DEB")
set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
set(CPACK_PACKAGE_VERSION_MAJOR ${LAUNCHDB_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${LAUNCHDB_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${LAUNCHDB_VERSION_PATCH})
set(CPACK_PACKAGE_CONTACT "Poddubny Mikhail xminuz@gmail.com")
set(CPACK_PACKAGE_DESCRIPTION "Database creation tool")
set(CPACK_PACKAGE_VERSION ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH})
set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION})
#set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${LSB_CODENAME_SHORT}-${LSB_RELEASE_SHORT})

if(CMAKE_BUILD_TYPE MATCHES "Debug")
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-dbg")
endif()

endif()

include(CPack)
